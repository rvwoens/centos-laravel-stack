#!/bin/bash
CONF=./pusher.conf
PUSHERVERSION=./pusher.version
RED='\033[0;101m'
GREEN='\033[0;102m'
NC='\033[0m'

echo "############# pusher run at `date` ####"

function usage() {
	echo "Usage: pusher <environment> [<tag>]"
	echo "tag is optional Automatic if not given"
	echo "Create pusher.conf like:"
	echo "[env]   [ssh-signon] 	                 [directory]"
	if [ -f $CONF ]; then
		echo -e "${RED}Available in pusher.conf:${NC}"
		cat $CONF
	fi
	exit
}

if [ ! -f $CONF ]; then
	echo "pusher.conf not found!"
	usage
fi
if [ -z $1 ]; then
	usage
fi
ENV=$1
# find pusher.conf config
while read -r envname hostname dirname; do
	if [[ "$ENV" == "$envname" ]]; then
		HOST=$hostname
		DIR=$dirname
		break
 	fi
done < $CONF
if [ -z $HOST ]; then
	echo "Environment $ENV not found"
	usage
fi

if [ -f ./config/version.php ]; then
	VERSIONPHP=./config/version.php
else
	if [ -f ./application/config/version.php ]; then
		VERSIONPHP=./application/config/version.php
	else
		if [ -f ./app/config/version.php ]; then
			VERSIONPHP=./app/config/version.php
		fi
	fi
fi

if [ -x $PUSHERVERSION ]; then
	# local newversion script overrides default
	echo "Running local $PUSHERVERSION"
	. $PUSHERVERSION
else
  echo ">> git describe --abbrev=0 --tags"
	LASTTAG=`git tag --sort=-version:refname | head -n 1`
  	#LASTTAG=`git describe --abbrev=0 --tags`
	echo "Current version tag $LASTTAG"
	if [ -z $2 ]; then
		NEWTAG=`newversion -x $LASTTAG`
	else
		NEWTAG=$2
	fi
	echo "Creating new version tag $NEWTAG"

	if [ ! -z $VERSIONPHP ]; then echo -e "<?php\n\t// auto-generated by pusher\n\n\treturn [\n\t\t'version'=>'$NEWTAG'\n\t]; " >$VERSIONPHP ;fi
	echo ">>> git add -A ."
	git add --all .
	echo ">>> git commit Release $NEWTAG"
	git commit -a -m "Release $NEWTAG"
	git tag -a -m "$NEWTAG" "$NEWTAG"
	echo ">>>> git push origin"
	git push --all --follow-tags
	#echo ">>>> git push origin --tags "
	#git push origin --tags
fi

# output: origin	git@gitlab.com:xxxx-nl/xxxx.git (push)
# use awk to get second column
REPO=`git remote -v | grep origin | grep push | awk '{print $2}'`

echo ">>>> Run PULLER $NEWTAG on $HOST $DIR"
# ssh -t -t makes sure you see the login-terminal, -T disables it
echo "$DIR/puller $NEWTAG" | ssh $HOST -T
echo ">>>> Puller finished. Did it say it went live?"