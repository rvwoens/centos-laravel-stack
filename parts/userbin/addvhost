#!/bin/bash

if [ -z "$1" ]; then
        echo "Usage: addvhost <domain>"
        echo "1) creates /var/www/domain"
        echo "2) creates vhost nginx to domain and *.domain (like www.asd.nl)"
        echo "3) creates git repo domain & upload hook"
        echo "USE FULL DOMAIN like xxyy.nl or asd.com"
        exit;
fi
# expand the ~ directory
HOME=`readlink -f ~`

export WWWDIR=/var/www
export GITDIR=$HOME/git
export VHOSTDIR=/etc/nginx/sites-available

WWWSITE=$WWWDIR/$1
GITSITE=$GITDIR/$1
SERVERNAME=$1

echo "Laravel app    at: $WWWSITE"
echo "Git repository at: $GITSITE"
echo "Servername       : $SERVERNAME"
echo -n "Press return to continue >" && read

sudo mkdir $WWWSITE
sudo mkdir $WWWSITE/public
echo "welcome to $SERVERNAME but it is still empty" | sudo tee --append $WWWSITE/public/index.php
sudo chown nginx:nginx -R $WWWSITE

mkdir $GITSITE
echo "Created $WWWSITE and $GITSITE"

max=0
for f in $VHOSTDIR/*.conf; do
        #echo $f
        v=`basename $f | grep -o "[0-9]*" | head -1`
        #echo "$f -> $v"
        if [ "$f" == "$VHOSTDIR/$v-$SERVERNAME.conf" ]; then
                echo "vhost already exists: $f - press enter to continue and remove old"
                read
                sudo rm $f
        fi
        if [ 0$v -gt 0$max ]; then
                max=$v
        fi
done
let "max=$max+1"
printf -v maxf "%02d" $max
newconffile=$maxf-$SERVERNAME.conf
newconf=$VHOSTDIR/$maxf-$SERVERNAME.conf
cat << EOF-nginxconf >/tmp/newconf
server {
        server_name www.$SERVERNAME;
        return 301 \$scheme://$SERVERNAME\$request_uri;
}
server {
   listen   80;
   server_name $SERVERNAME *.$SERVERNAME;
   root $WWWSITE/public;
   index  index.html index.htm index.php;

   location / {
        try_files \$uri \$uri/ /index.php?\$query_string;
   }

   location ~ \.php\$ {
       fastcgi_pass 127.0.0.1:9000;
       fastcgi_index  index.php;
       try_files \$uri /index.php =404;
       fastcgi_split_path_info ^(.+\.php)(/.+)\$;
       fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
       fastcgi_buffers 256 128k;
       fastcgi_connect_timeout 300s;
       fastcgi_send_timeout 300s;
       fastcgi_read_timeout 300s;
       include fastcgi_params;
    }
}
EOF-nginxconf
sudo cp /tmp/newconf $newconf
sudo ln -s $newconf /etc/nginx/sites-enabled/$newconffile
echo "Created $newconf for nginx. restarting nginx.."
sudo service nginx restart

cd $GITSITE
git init --bare
cd hooks
cat <<-EOF-postreceive >post-receive
        #!/bin/bash
        GIT_DIR=$GITSITE
        WORK_DIR=$WWWSITE

        sudo chown -R $USER:users \$WORK_DIR

        #check the pushed branch
        while read oldrev newrev refname
        do
                echo "REFNAME = \$refname"
                branch=\$(git rev-parse --symbolic --abbrev-ref \$refname)
                echo "BRANCH = \$branch"
        done

        git --work-tree=\$WORK_DIR --git-dir=\$GIT_DIR checkout \$branch -f
        cd \$WORK_DIR
        composer install
        composer dump-autoload
        npm install
        php artisan migrate
	php artisan vendor:publish
	php artisan route:clear
	php artisan config:clear
	php artisan cache:clear
	
	## laravel 5.6 webpack style
	if grep "npm run production" package.json ; then
		npm run production
	fi
	## older laravel gulpfiles
	if [ -e gulpfile.js ]; then
        	gulp
	fi	

        sudo chown nginx:nginx ./ -R
        sudo chmod -R a+w storage
        # end of deploy script
EOF-postreceive
chmod a+x post-receive
cd ~

echo "Git repo $GITSITE created"
echo "Now cut/paste this locally:"
echo "-------------------------------------------------------------"
echo "git remote add web ssh://$USER@[domain]/~/git/$SERVERNAME"
echo "git push web master"
echo "-------------------------------------------------------------"

